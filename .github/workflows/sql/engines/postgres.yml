name: PostgreSQL Integration Tests
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
      max-parallel: 5
    steps:
      - uses: actions/checkout@v2
      - name: Generate random password
        shell: bash -l {0}
        run: |
          echo "export PGPASSWORD=pgpass$RANDOM" > pass.sh
      - name: Install postgres
        shell: bash -l {0}
        run: |
          sudo apt-get update
          sudo apt-get --yes install postgresql-client postgresql
          sudo service postgresql start
          source pass.sh
          sudo -u postgres psql -U postgres -d postgres -c "alter user postgres with password '$PGPASSWORD';"
      - name: Clone test datasets
        run: |
          git clone https://github.com/opendp/dp-test-datasets.git
      - name: Install PUMS
        shell: bash -l {0}
        run: |
          source pass.sh
          export DATA=`pwd`/dp-test-datasets/data/
          cd tests/sdk/engines/postgres/PUMS
          source install.sh
        env:
          POSTGRES_HOST: localhost
      - name: Verify database
        shell: bash -l {0}
        run: |
          source pass.sh
          echo $PGPASSWORD
          psql -U postgres -h $POSTGRES_HOST -d pums -c "select count(*) FROM pums"
          psql -U postgres -h $POSTGRES_HOST -d pums -c "select count(*) FROM pums_large"
        env:
          POSTGRES_HOST: localhost
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          auto-activate-base: true
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        shell: bash -l {0}
        run: |
          conda install pip
          conda update pip
      - name: Verify database again
        shell: bash -l {0}
        run: |
          source pass.sh
          echo $PGPASSWORD
          psql -U postgres -h $POSTGRES_HOST -d pums -c "select count(*) FROM pums"
          psql -U postgres -h $POSTGRES_HOST -d pums -c "select count(*) FROM pums_large"
        env:
          POSTGRES_HOST: localhost
